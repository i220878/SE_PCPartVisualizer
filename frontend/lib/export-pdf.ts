import { jsPDF } from "jspdf"
import type { Component } from "@/lib/types"
import { checkCompatibility } from "@/lib/compatibility"

export function exportBuildToPDF(build: {
  name: string
  date: string
  components: Component[]
}) {
  const doc = new jsPDF()
  const compatibilityIssues = checkCompatibility(build.components)
  const totalPrice = build.components.reduce((sum, component) => sum + component.price, 0)

  // Set font
  doc.setFont("helvetica", "bold")
  doc.setFontSize(24)
  doc.text(build.name, 20, 20)

  // Subtitle
  doc.setFont("helvetica", "normal")
  doc.setFontSize(12)
  doc.text(`Generated on ${new Date(build.date).toLocaleDateString()}`, 20, 30)

  // Components section
  doc.setFont("helvetica", "bold")
  doc.setFontSize(16)
  doc.text("Components", 20, 50)

  // Component list
  doc.setFont("helvetica", "normal")
  doc.setFontSize(12)
  let y = 60
  build.components.forEach((component) => {
    doc.text(`${component.brand} ${component.name}`, 20, y)
    doc.text(`$${component.price.toFixed(2)}`, 180, y, { align: "right" })
    y += 10
  })

  // Total
  doc.setFont("helvetica", "bold")
  doc.text("Total", 20, y + 10)
  doc.text(`$${totalPrice.toFixed(2)}`, 180, y + 10, { align: "right" })

  // Compatibility warnings
  if (compatibilityIssues.length > 0) {
    y += 30
    doc.setFont("helvetica", "bold")
    doc.setFontSize(14)
    doc.text("Compatibility Warnings", 20, y)

    doc.setFont("helvetica", "normal")
    doc.setFontSize(12)
    compatibilityIssues.forEach((issue) => {
      y += 10
      doc.text(issue, 20, y)
    })
  }

  // Footer
  const pageHeight = doc.internal.pageSize.height
  doc.setFont("helvetica", "normal")
  doc.setFontSize(10)
  doc.text(
    `Generated by PC Part Visualizer â€¢ ${new Date().toLocaleDateString()}`,
    105,
    pageHeight - 20,
    { align: "center" }
  )

  // Save the PDF
  doc.save(`${build.name.replace(/\s+/g, "-").toLowerCase()}.pdf`)
} 